[pytest]
# Pytest configuration for VRPTW System

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Minimum version
minversion = 7.0

# Test paths
testpaths = tests

# Add project root to Python path
pythonpath = .

# Output options
addopts =
    # Verbose output
    -v
    # Show local variables in tracebacks
    -l
    # Show summary of all test outcomes
    -ra
    # Enable strict markers
    --strict-markers
    # Show warnings
    -W default
    # Coverage options (uncomment to enable)
    # --cov=app
    # --cov-report=html
    # --cov-report=term-missing
    # --cov-fail-under=80
    # Show slowest tests
    --durations=10
    # Capture output
    --capture=no
    # Disable warnings summary
    --disable-warnings

# Markers for organizing tests
markers =
    unit: Unit tests that test individual components
    integration: Integration tests that test multiple components together
    slow: Tests that take a long time to run
    api: Tests for API endpoints
    optimization: Tests for optimization algorithms
    database: Tests that require database access
    external: Tests that require external services (Yandex Maps, etc.)
    smoke: Quick smoke tests for basic functionality

# Coverage options
[coverage:run]
source = app
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

exclude_lines =
    # Don't complain about missing debug-only code
    def __repr__
    def __str__
    
    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError
    
    # Don't complain if non-runnable code isn't run
    if 0:
    if __name__ == .__main__.:
    
    # Don't complain about abstract methods
    @abc.abstractmethod
    @abstractmethod
    
    # Type checking code
    if TYPE_CHECKING:
    if typing.TYPE_CHECKING:
    
    # Debugging code
    import pdb
    pdb.set_trace()

# Logging configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Timeout for tests (in seconds)
# Requires pytest-timeout plugin
# timeout = 300

# Parallel execution
# Requires pytest-xdist plugin
# addopts = -n auto

# Filter warnings
filterwarnings =
    # Ignore deprecation warnings from dependencies
    ignore::DeprecationWarning
    # Show all other warnings
    default
